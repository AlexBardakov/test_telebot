from config import TOKEN, trigger_items
from datetime import datetime

from random import choice

import telebot
from telebot import types

import text_data
bot = telebot.TeleBot(TOKEN)


@bot.callback_query_handler(func=lambda call: 'YesNo:' in call.data)
def save_age(call):
    bot.send_message(call.message.chat.id, call.data)


# def get_age(message):
#     keyboard = types.InlineKeyboardMarkup(row_width=1)
#     keyboard.add(
#         types.InlineKeyboardButton(text='–î–∞', callback_data='YesNo:yes'))
#     keyboard.add(
#         types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='YesNo:no'))
#     bot.send_message(message.chat.id, '–î–∞ –∏–ª–∏ –Ω–µ—Ç?', reply_markup=keyboard)


@bot.message_handler(commands=['start'])
def start(message, call_text=text_data.start_user_text):
    if message.chat.id == 386637507:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('_–û—Ç–º–µ—Ç–∫–∞ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞_')
        # btn2 = types.KeyboardButton("–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—ã")
        # btn3 = types.KeyboardButton("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...")
        # btn4 = types.KeyboardButton("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã")
        # btn5 = types.KeyboardButton("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑—ã")
        # btn6 = types.KeyboardButton("–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")
        # btn7 = types.KeyboardButton("–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã")
        # btn8 = types.KeyboardButton("–°–≤—è–∑—å —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º")
        # markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
        # bot.send_message(message.chat.id,
        #                  text='–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=markup)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞')
        btn2 = types.KeyboardButton('–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—ã')
        btn3 = types.KeyboardButton('–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...')
        btn4 = types.KeyboardButton('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã')
        btn5 = types.KeyboardButton('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑—ã')
        btn6 = types.KeyboardButton('–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ')
        btn7 = types.KeyboardButton('–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã')
        btn8 = types.KeyboardButton('–°–≤—è–∑—å —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)
        bot.send_message(message.chat.id,
                         call_text.format(message.from_user),
                         reply_markup=markup)
#

@bot.message_handler(content_types=['text'])
def func(message):
    time_of_refresh = '-'
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        start(message, text_data.text_of_user_menu)

    elif message.text == '–î–æ—Å—Ç–∞–≤–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –¢–æ–º—Å–∫—É')
        btn2 = types.KeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –¥—Ä—É–≥–∏–µ —Ä–µ–≥–∏–æ–Ω—ã')
        back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–æ—Å—Ç–∞–≤–∫–∏:',
                         reply_markup=markup)

    elif message.text == '–ù–∞–ª–∏—á–∏–µ –∏ —Ü–µ–Ω—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(back)
        bot.send_message(message.chat.id,
                         text='–° –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –Ω–∞–ª–∏—á–∏–µ–º –∏ —Ü–µ–Ω–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ '
                              '–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ fourkings.ru. –ü–æ—Å–ª–µ–¥–Ω–µ–µ '
                              '–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ –±—ã–ª–æ '
                              '{}'.format(time_of_refresh), reply_markup=markup)

    elif (message.text == '–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏...'):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ë—É—Ä—Ä–∞—Ç–∞ –∏ —Å—Ç—Ä–∞—á–∞—Ç–µ–ª–ª–∞')
        btn2 = types.KeyboardButton('–°—ã—Ä–Ω—ã–µ –¥–µ—Å–µ—Ä—Ç—ã')
        btn3 = types.KeyboardButton('–ü–ª–∞–≤–ª–µ–Ω—ã–π —Å—ã—Ä')
        btn4 = types.KeyboardButton('–î—Ä—É–≥–∏–µ —Å—ã—Ä—ã')
        back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2, btn3, btn4, back)
        bot.send_message(message.chat.id, text='–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
                         reply_markup=markup)

    elif message.text == '_–û—Ç–º–µ—Ç–∫–∞ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞_':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(back)
        time_of_refresh = str(datetime.now().strftime("%d/%m/%Y"))
        bot.send_message(message.chat.id,
                         text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ '
                              '–æ–±–Ω–æ–≤–ª–µ–Ω–∞'.format(time_of_refresh),
                         reply_markup=markup)
    elif (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏..")
    #
    # elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
    #     bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")
    #
    # elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    #     button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    #     markup.add(button1, button2)
    #     bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    # else:
    #     bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")


@bot.message_handler(commands=['help'])
def bot_help(message):
    bot.send_message(message.chat.id, '–ü–æ–º–æ–≥–∏(')


@bot.message_handler(commands=['id'])
def bot_id(message):
    bot.send_message(message.chat.id, message.chat.id)


@bot.message_handler(content_types=['text'])
def bot_auto_call(message):
    for key, caller in trigger_items:
        if any((word in message.text.lower()) for word in key):
            if isinstance(caller, tuple):
                bot.send_message(message.chat.id, text=choice(caller))
            else:
                bot.send_message(message.chat.id, text=caller)


bot.infinity_polling()
